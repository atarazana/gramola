apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: {{ .Values.gramolaEventsPullRequestPipelineName }}
  namespace: {{ .Values.cicdNamespace }}
  labels:
    app.kubernetes.io/instance: events
    pipeline.openshift.io/runtime: quarkus
    pipeline.openshift.io/type: knative
spec:
  params:
    - name: APP_NAME
      type: string
      default: events
    - name: GIT_REPO_CONFIG
      type: string
    - name: GIT_REVISION_CONFIG
      type: string
      default: main
    - name: IMAGE_DIGEST_CLEAN
      type: string
    - name: COUNT
      type: string
    - name: OVERLAY
      type: string
    - name: NEXT_OVERLAY
      type: string
  tasks:
    - name: fetch-config-repository
      params:
        - name: url
          value: $(params.GIT_REPO_CONFIG)
        - name: revision
          value: $(params.GIT_REVISION_CONFIG)
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace-source
    - name: update-image
      when:
        - input: "$(params.NEXT_OVERLAY)"
          operator: in
          values: [{{ .Values.overlays }}]
      params:
        - name: FILE_TO_UPDATE
          value: "{{ .Values.gramolaEventsOverlayPath }}/$(params.NEXT_OVERLAY)/kustomization.yml"
        - name: SELECT_EXPRESSION
          value: "(.images.[] | select(.name == \"gramola-events*\")).newTag"
        - name: NEW_VALUE
          value: "$(params.IMAGE_DIGEST_CLEAN)"
      runAfter:
        - fetch-config-repository
      taskRef:
        kind: ClusterTask
        name: yq-eval-in-place
      workspaces:
        - name: source
          workspace: workspace-source
    - name: pr-create
      when:
        - input: "$(params.NEXT_OVERLAY)"
          operator: in
          values: [{{ .Values.overlays }}]
      params:
        - name: PR_TITLE
          value: "Updating '{{ .Values.appName }}-events' image for overlay '$(params.NEXT_OVERLAY)' with new image"
        - name: PR_BODY
          value: |
            command: UPDATE_IMAGE
            count: $(params.COUNT)
            overlay: $(params.NEXT_OVERLAY)
            kustomizationPath: {{ .Values.gramolaEventsOverlayPath }}/$(params.NEXT_OVERLAY)/kustomization.yml
            imageDigestClean: $(params.IMAGE_DIGEST_CLEAN)
            pipelineName: {{ .Values.gramolaEventsPullRequestPipelineName }}
        - name: PAT_SECRET_NAME
          value: {{ .Values.gitPatSecretName }}
        - name: PAT_SECRET_KEY
          value: {{ .Values.gitPatSecretKey }}
      runAfter:
        - update-image
      taskRef:
        kind: ClusterTask
        name: pr-create
      workspaces:
        - name: source
          workspace: workspace-source
  workspaces:
    - name: workspace-source
    - name: workspace-cache
